#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
    tapping-term-ms = <250>;
};

&lt { tapping-term-ms = <150>; };

&trackball {
    // automouse-layer = <5>;

    scroll-layers = <7>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        r_snipe {
            bindings = <&mo 6>;
            key-positions = <7 8>;
        };

        l_snipe {
            bindings = <&mo 6>;
            key-positions = <1 2>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        tdl: tap_dance_lang {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp LANG2>, <&kp LANG1>;
        };

        my_gresc: my_grave_escape {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };

        // mtdl: mod_tap_dance_lang {
        //     compatible = "zmk,behavior-hold-tap";
        //     label = "MOD_TAP_DANCE_LANG";
        //     #binding-cells = <2>;
        //     tapping-term-ms = <250>;
        //     bindings = <&mo>, <&tdl>;
        // };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&my_gresc    &lt 5 W      &lt 7 U     &kp F        &kp SQT                                          &kp MINUS    &kp M       &lt 7 R     &lt 5 G      &kp P
&mt LSHFT A  &mt LCTRL I  &mt LALT E  &mt LGUI O   &kp Z        &kp LG(KP_N0)        &kp PAGE_UP    &kp D        &mt RGUI T  &mt RALT N  &mt RCTRL S  &mt RSHFT Y
&kp TAB      &kp X        &kp C       &kp V        &kp Q        &kp CAPS             &kp PAGE_DOWN  &kp B        &kp H       &kp J       &kp K        &kp L
&none        &none        &none       &lt 3 LANG1  &lt 2 SPACE  &mt LSHFT LANG2      &kp BSPC       &lt 1 ENTER                                       &none
            >;

            sensor-bindings = <&inc_dec_kp LG(MINUS) LG(EQUAL)>;
        };

        NUM {
            bindings = <
&kp SLASH     &kp KP_MULTIPLY  &kp KP_MINUS  &kp KP_PLUS  &kp PRCNT                           &none   &none        &kp EQUAL    &kp LT        &kp GT
&mt LSHFT N1  &mt LCTRL N2     &mt LALT N3   &mt LGUI N4  &kp N5     &kp K_MUTE      &none    &kp N6  &mt RGUI N7  &mt RALT N8  &mt RCTRL N9  &mt RSHFT N0
&kp SEMI      &kp COMMA        &kp DOT       &kp COLON    &none      &none           &none    &none   &kp LEFT     &kp DOWN     &kp UP        &kp RIGHT
&trans        &trans           &trans        &trans       &trans     &trans          &kp DEL  &trans                                          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        SYM {
            bindings = <
&kp BACKSLASH   &kp QMARK     &none          &none          &none                              &none      &none          &none          &kp LPAR        &kp RPAR
&mt LSHFT EXCL  &mt LCTRL AT  &mt LALT HASH  &mt LGUI DLLR  &kp PRCNT  &none          &none    &kp CARET  &mt RGUI AMPS  &mt RALT STAR  &mt RCTRL LBKT  &mt RSHFT RBKT
&kp SEMI        &kp COMMA     &kp DOT        &kp COLON      &none      &none          &none    &none      &kp PIPE       &kp KP_MINUS   &kp LBRC        &kp RBRC
&trans          &trans        &trans         &trans         &trans     &trans         &kp DEL  &trans                                                   &trans
            >;
        };

        FUNCTION {
            bindings = <
&kp F1                 &kp F2                 &kp F3              &kp F4            &kp F5                      &kp F6  &kp F7         &kp F8         &kp F9         &kp F10
&mt LSHFT LG(LS(F12))  &mt LCTRL LS(LA(F12))  &mt LALT LS(LA(H))  &mt LGUI LG(F12)  &none   &none       &none   &none   &kp RG(KP_N0)  &kp RG(MINUS)  &kp RG(EQUAL)  &kp F11
&none                  &none                  &none               &none             &none   &none       &none   &none   &kp K_MUTE     &kp C_VOL_DN   &kp C_VOL_UP   &kp F12
&trans                 &trans                 &trans              &trans            &trans  &trans      &trans  &trans                                               &trans
            >;
        };

        BLUETOOTH {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &mo 6   &trans  &trans                      &trans  &mkp MB5  &mo 6     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB2  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB4  &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        SNIPE {
            bindings = <
&trans  &trans  &mo 6   &trans  &trans                      &trans  &mkp MB5  &mo 6     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB2  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB4  &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        bluetooth {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };
};
